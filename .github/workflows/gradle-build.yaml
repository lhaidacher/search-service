name: CI with Gradle

on:
  push:
    branches: [ master ]

jobs:
  build-container:
    name: CI Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: Install jdk
        uses: actions/setup-java@v1
        with:
          java-version: 8
          java-package: jdk
      - name: Build jar
        uses: eskatos/gradle-command-action@v1
        with:
          arguments: build
      - name: Build and push images
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_PASSWORD }}
          registry: harbor.lhaidacher.com/onlineshop
          repository: search-service
          tag_with_sha: true
  update-deployment:
    name: CI GitOps
    needs: build-container
    runs-on: ubuntu-latest
    steps:
      - name: Checkout deployment repository
        uses: actions/checkout@v2
        with:
          repository: lhaidacher/search-service-chart
          ref: master
          token: ${{ secrets.GIT_TOKEN }}
      - name: Get commit SHA
        uses: benjlevesque/short-sha@v1.1
        with:
          length: 7
      - name: Update app version
        env:
          SHA: ${{ env.SHA }}
        run: |
          mv Chart.yaml Chart.old.yaml &&
          cat Chart.old.yaml | grep -v appVersion > Chart.yaml &&
          echo -e "appVersion: 'sha-${{ env.SHA }}'" >> Chart.yaml &&
          cat Chart.yaml
          rm Chart.old.yaml
     # - name: Lint helm chart
     #   uses: helm/chart-testing-action@v1.0.0
     #   with:
     #     command: lint
      - name: Push changes
        uses: github-actions-x/commit@v2.7
        env:
          SHA: ${{ env.SHA }}
        with:
          github-token: ${{ secrets.GIT_TOKEN }}
          push-branch: 'master'
          commit-message: 'GitHub Action appVersion (sha-${{env.SHA}}) update'
          files: Chart.yaml
          name: ${{ secrets.GIT_USERNAME }}
          email: ${{ secrets.GIT_EMAIL }}
  store-metrics:
    name: CI Post-Build
    needs: update-deployment
    runs-on: ubuntu-latest
    steps:
      - name: Publish metrics
        run: echo 'The selected color is' $SELECTED_COLOR
     # - uses: floric/repo-monitor-action@v1.4.1
     #   name: Update Report
     #   with:
     #     key: code-size
     #     value: ${{ steps.projectmetrics.outputs.code_size }}
     #     token: ${{ secrets.GITHUB_TOKEN }}
     # - uses: someimportantcompany/github-actions-slack-message@v1
     #   with:
     #     channel: ${{ secrets.SLACK_CHANNEL }}
     #     bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
     #     text: GitOps CI war erfolgreich