name: Java CI with Gradle

on:
  push:
    branches: [ master ]

jobs:
  code-analysis:
    name: Code-analysis with SonarQube
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      #- name: Execute tests
      #  uses: eskatos/gradle-command-action@v1
      #  with:
      #    arguments: test
      - name: Gradle build
        uses: eskatos/gradle-command-action@v1
        env:
          PROJ: search-service
          URL: ${{ secrets.SONARQUBE_HOST }}
          TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
        with:
          arguments: sonarqube -Dsonar.projectKey=${{ env.PROJ }} -Dsonar.host.url=${{ env.URL }} -Dsonar.login=${{ env.TOKEN }}
      #- name: SonarQube Scan
      #  uses: kitabisa/sonarqube-action@master
      #  with:
      #    host: ${{ secrets.SONARQUBE_HOST }}
      #    login: ${{ secrets.SONARQUBE_TOKEN }}
  build-container:
    name: Build and push Container
    runs-on: ubuntu-latest
    needs: sonar-analysis
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: Install JVM
        uses: actions/setup-java@v1
        with:
          java-version: 8
          java-package: jdk
      - name: Gradle build
        uses: eskatos/gradle-command-action@v1
        with:
          arguments: build
      - name: Build and push Docker images
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_PASSWORD }}
          registry: harbor.lhaidacher.com/onlineshop
          repository: search-service
          tag_with_sha: true
  update-deployment:
    name: Update deployment repository
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout deployment repository
        uses: actions/checkout@v2
        with:
          repository: lhaidacher/search-service-chart
          ref: master
          token: ${{ secrets.GIT_TOKEN }}
      - name: Get Git commit SHA
        uses: benjlevesque/short-sha@v1.1
        with:
          length: 7
      #- name: Lint helm chart
      #  uses: helm/chart-testing-action@v1.0.0
      #  with:
      #    command: lint
      - name: Update app version
        env:
          SHA: ${{ env.SHA }}
        run: |
          mv Chart.yaml Chart.old.yaml &&
          cat Chart.old.yaml | grep -v appVersion > Chart.yaml &&
          echo -e "appVersion: 'sha-${{ env.SHA }}'" >> Chart.yaml &&
          cat Chart.yaml
          rm Chart.old.yaml
      - name: push
        uses: github-actions-x/commit@v2.7
        env:
          SHA: ${{ env.SHA }}
        with:
          github-token: ${{ secrets.GIT_TOKEN }}
          push-branch: 'master'
          commit-message: 'GitHub Action appVersion (sha-${{env.SHA}}) update'
          files: Chart.yaml
          name: ${{ secrets.GIT_USERNAME }}
          email: ${{ secrets.GIT_EMAIL }}